name: Release

on:
  push:
    tags:
      - 'v*'

jobs:
  build:
    name: Build and Release
    runs-on: ubuntu-latest

    strategy:
      matrix:
        goos: [linux, darwin, windows]
        goarch: [amd64, arm64]
        # Example: exclude certain combinations if unsupported
        exclude:
          - goos: darwin
            goarch: arm64
          - goos: windows
            goarch: arm64

    steps:
      - name: Check out code
        uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '^1.21'

      - name: Build Go app
        env:
          GOOS: ${{ matrix.goos }}
          GOARCH: ${{ matrix.goarch }}
        run: |
          CGO_ENABLED=0 go build \
            -o "./ApproveGuard-${{ matrix.goos }}-${{ matrix.goarch }}" \
            --ldflags '-w -s -extldflags "-static" -X main.version=${{ github.ref_name }}' .

      - name: List files
        run: ls -lh

      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: ApproveGuard-${{ matrix.goos }}-${{ matrix.goarch }}
          path: "./ApproveGuard-${{ matrix.goos }}-${{ matrix.goarch }}"

  release:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v3

      - name: Download all artifacts
        uses: actions/download-artifact@v3

      - name: List all downloaded artifacts
        run: ls -la

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: |
            ./ApproveGuard-*/*
        env:
          GITHUB_TOKEN: ${{ secrets.RELEASE_GITHUB_TOKEN }}

      # Example Docker build step (commented out):
      # - name: Build and push Docker image
      #   uses: docker/build-push-action@v4
      #   with:
      #     context: .
      #     file: ./Dockerfile
      #     # platforms might match your build matrix or a custom list
      #     platforms: linux/amd64,linux/arm64
      #     push: true
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.RELEASE_GITHUB_TOKEN }}
